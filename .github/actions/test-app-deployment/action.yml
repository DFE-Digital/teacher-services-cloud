name: Test application deployment
description: Test deployment of an ITTMS review app to the cluster

inputs:
  azure-client-id:
    description: Azure managed identity client ID for OIDC authentication
    required: true
  azure-subscription-id:
    description: Azure managed identity subscription ID for OIDC authentication
    required: true
  azure-tenant-id:
    description: Azure managed identity tenant ID for OIDC authentication
    required: true
  environment:
    description: The application environment config
    required: true

runs:
  using: composite

  steps:
  - name: Check out ITTMS repository
    uses: actions/checkout@v4
    with:
      repository: DFE-Digital/itt-mentor-services
      path: itt-mentor-services

  - name: Set Environment variables
    id: set_env_var
    shell: bash
    working-directory: itt-mentor-services
    run: |
      # Get terraform version
      terraform_version=$(awk '/{/{f=/^terraform/;next}f' terraform/application/terraform.tf | grep -o [0-9\.]*)
      echo "TERRAFORM_VERSION=$terraform_version" >> $GITHUB_ENV

      # Get latest commit id on main to fetch the corresponding docker tag
      COMMIT_ID=$(git rev-parse HEAD)
      echo "COMMIT_ID=$COMMIT_ID" >> $GITHUB_ENV

  - name: Use Terraform ${{ env.TERRAFORM_VERSION }}
    uses: hashicorp/setup-terraform@v3
    with:
      terraform_version: ${{ env.TERRAFORM_VERSION }}
      terraform_wrapper: false

  - uses: DFE-Digital/github-actions/set-kubelogin-environment@master
    with:
      azure-client-id: ${{ inputs.azure-client-id }}
      azure-tenant-id: ${{ inputs.azure-tenant-id }}
      azure-subscription-id: ${{ inputs.azure-subscription-id }}

  - name: Deploy application to ${{ inputs.environment }}
    shell: bash
    working-directory: itt-mentor-services
    run: make ${{ inputs.environment }} ci terraform-apply
    env:
      DOCKER_IMAGE_TAG: ${{ env.COMMIT_ID }}
      PR_NUMBER: 9999

  - name: Run healthcheck
    shell: bash
    working-directory: itt-mentor-services
    run: |
      external_urls=$(terraform -chdir=terraform/application output -json external_urls | jq -r '.[]')
      for url in $external_urls; do
        echo "Check health for $url/healthcheck/all..."
        curl -sS --fail "$url/healthcheck/all" > /dev/null
      done

  - name: Delete application
    shell: bash
    working-directory: itt-mentor-services
    run: make ${{ inputs.environment }} ci terraform-destroy
    env:
      DOCKER_IMAGE_TAG: main
      PR_NUMBER: 9999
