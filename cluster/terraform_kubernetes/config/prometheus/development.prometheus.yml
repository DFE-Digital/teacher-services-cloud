#
# see https://prometheus.io/docs/prometheus/latest/configuration/configuration
# and
# https://github.com/prometheus/prometheus/blob/main/documentation/examples/prometheus-kubernetes.yml
#
# initial scrape configs added, these will be updated later as required
#
global:
  scrape_interval: 1m
  evaluation_interval: 1m
# Keep at most 100 sets of details of targets dropped by relabeling.
# This information is used to display in the UI for troubleshooting.
  keep_dropped_targets: 100
  external_labels:
    cluster: prometheus
rule_files:
  - /etc/prometheus-rules/*rules
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
        - "alertmanager.monitoring.svc:9093"
scrape_configs:
# Scrape config for node-exporter.
  - job_name: 'node-exporter'
    kubernetes_sd_configs:
      - role: endpoints
    relabel_configs:
    - source_labels: [__meta_kubernetes_endpoints_name]
      regex: 'node-exporter'
      action: keep
# Scrape config for API servers.
#
# Kubernetes exposes API servers as endpoints to the default/kubernetes
# service so this uses `endpoints` role and uses relabelling to only keep
# the endpoints associated with the default/kubernetes service using the
# default named port `https`. This works for single API server deployments as
# well as HA API server deployments.
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      # disabled certificate verification otherwise it fails with incorrect IP
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    # Keep only the default/kubernetes service endpoints for the https port.
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https
# Scrape config for nodes (kubelet).
  - job_name: 'kubernetes-nodes'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics
# Example scrape config for pods
#
# The relabeling allows the actual pod scrape to be configured
# for all the declared ports (or port-free target if none is declared)
# or only some ports.
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    # Only scrape pods that have
    # "prometheus_io_scrape = true" annotation.
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    # Exclude nginx ingress pods from this job (they have their own job below)
    - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
      action: drop
      regex: ingress-nginx
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name
    - source_labels: [__meta_kubernetes_pod_node_name]
      target_label: nodename
# Dedicated scrape config for nginx ingress with cardinality reduction
  - job_name: 'nginx-ingress'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
      action: keep
      regex: ingress-nginx
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    metric_relabel_configs:
    # Drop specific labels from all nginx ingress histogram bucket metrics for cardinality reduction
    - source_labels: [__name__]
      regex: nginx_ingress_controller_.*_bucket
      target_label: instance
      replacement: ''
    - source_labels: [__name__]
      regex: nginx_ingress_controller_.*_bucket
      target_label: kubernetes_pod_name
      replacement: ''
    - source_labels: [__name__]
      regex: nginx_ingress_controller_.*_bucket
      target_label: pod_template_hash
      replacement: ''
    - source_labels: [__name__]
      regex: nginx_ingress_controller_.*_bucket
      target_label: controller_pod
      replacement: ''
    - source_labels: [__name__]
      regex: nginx_ingress_controller_.*_bucket
      target_label: nodename
      replacement: ''
    
    # Drop the orphan_ingress metric entirely
    - source_labels: [__name__]
      regex: nginx_ingress_controller_orphan_ingress
      action: drop
    
    # For non-histogram metrics (count, sum, requests), drop high-cardinality labels
    - source_labels: [__name__]
      regex: nginx_ingress_controller_(request_size_count|request_size_sum|request_duration_seconds_count|bytes_sent_sum|requests)
      target_label: instance
      replacement: ''
    - source_labels: [__name__]
      regex: nginx_ingress_controller_(request_size_count|request_size_sum|request_duration_seconds_count|bytes_sent_sum|requests)
      target_label: kubernetes_pod_name
      replacement: ''
    - source_labels: [__name__]
      regex: nginx_ingress_controller_(request_size_count|request_size_sum|request_duration_seconds_count|bytes_sent_sum|requests)
      target_label: pod_template_hash
      replacement: ''
    - source_labels: [__name__]
      regex: nginx_ingress_controller_(request_size_count|request_size_sum|request_duration_seconds_count|bytes_sent_sum|requests)
      target_label: controller_pod
      replacement: ''
    - source_labels: [__name__]
      regex: nginx_ingress_controller_(request_size_count|request_size_sum|request_duration_seconds_count|bytes_sent_sum|requests)
      target_label: nodename
      replacement: ''
    
    # Optional: For even more aggressive reduction, drop path label from high-cardinality metrics
    # Uncomment if you don't need per-path metrics
    # - source_labels: [__name__]
    #   regex: nginx_ingress_controller_(request_duration_seconds_bucket|response_size_bucket|request_size_bucket|requests)
    #   target_label: path
    #   replacement: 'aggregated'
# Scrape config for kube-state-metrics.
  - job_name: 'kube-state-metrics'
    static_configs:
      - targets: ['kube-state-metrics.monitoring.svc.cluster.local:8080']
# Scrape config for Kubelet cAdvisor.
#
# This is required for Kubernetes 1.7.3 and later, where cAdvisor metrics
# (those whose names begin with 'container_') have been removed from the
# Kubelet metrics endpoint.  This job scrapes the cAdvisor endpoint to
# retrieve those metrics.
  - job_name: 'kubernetes-cadvisor'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
# Example scrape config for service endpoints.
#
# The relabeling allows the actual service scrape endpoint to be configured
# for all or only some endpoints.
  - job_name: 'kubernetes-service-endpoints'
    kubernetes_sd_configs:
    - role: endpoints
    relabel_configs:
    # Only scrape endpoints that have
    # "prometheus_io_scrape = true" annotation.
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
      action: replace
      target_label: __scheme__
      regex: (https?)
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
      action: replace
      target_label: __address__
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_service_name]
      action: replace
      target_label: kubernetes_name
  #
  #  Below were used in the spike and left here for info
  #  They wree a quick fix, so very likely can be improved
  #
  # - job_name: 'nginx-pods'
  #   kubernetes_sd_configs:
  #     - role: pod
  #   relabel_configs:
  #   - source_labels: [__meta_kubernetes_pod_container_port_number]
  #     regex: '443'
  #     action: drop
  #   - source_labels: [__meta_kubernetes_pod_container_port_number]
  #     regex: '8443'
  #     action: drop
  #   - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
  #     regex: 'ingress-nginx'
  #     action: keep
  #   - source_labels: [__address__, __meta_kubernetes_pod_container_port_number]
  #     action: replace
  #     regex: ([^:]+)(?::\d+)?;(\d+)
  #     replacement: $1:10254
  #     target_label: __address__
  # - job_name: 'apply-pods'
  #   kubernetes_sd_configs:
  #     - role: pod
  #   relabel_configs:
  #   - source_labels: [__meta_kubernetes_pod_label_app]
  #     regex: 'apply-review-rm1'
  #     action: keep
  # - job_name: 'apply-sidekiq-pods'
  #   kubernetes_sd_configs:
  #     - role: pod
  #   relabel_configs:
  #   - source_labels: [__meta_kubernetes_pod_label_app]
  #     regex: 'apply-secondary-worker-review-rm1|apply-worker-review-rm1'
  #     action: keep
  #   - source_labels: [__address__]
  #     action: replace
  #     regex: ([^:]+)
  #     replacement: "$${1}:9394"
  #     target_label: __address__
  #
